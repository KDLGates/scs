<?xml version="1.0" encoding="us-ascii"?>
	
<experiment>
	<seed>-59875563504154406</seed>
	
	<universe>
		<name>edu.usf.ratsim.experiment.universe.virtual.VirtUniverse</name>
		<params>
			<!-- Distance from which the food is accessible according to the universe -->
			<closeToFoodThrs>0.1</closeToFoodThrs>
			<!-- Map file -->
			<maze>multiscalemodel/src/edu/usf/ratsim/experiment/mazes/tspSimpleRuns.xml</maze>
			<!-- Display de window or run without GUI -->
			<display>true</display>
		</params>
	</universe>
	
	<robot>
		<!-- Robot to use. Use full name of the class -->
		<name>edu.usf.ratsim.robot.virtual.VirtualRobot</name>
		<params>
			<!-- Percentual translational noise -->
			<noise>.0</noise>
			<!-- Rotation noise added after translation -->
			<translationRotationNoise>0</translationRotationNoise>
			<!-- How many steps are projected for obstacle avoidance purpose -->
			<lookaheadSteps>1</lookaheadSteps>
			<!-- Half the field of view of the rat -->
			<halfFieldOfView>3.14</halfFieldOfView>
			<!-- How long can the rat see in meters -->
			<visionDist>10</visionDist>
			<!-- How far away can the robot eat food. This should be shorter than the universe
				threshold -->
			<closeThrs>.1</closeThrs>
		</params>
	</robot>
	
	<model>
		<!-- Model implementation -->
		<name>edu.usf.ratsim.experiment.subject.TSPSubject</name>
		<params>
			<!-- Step length in meters -->
			<step>.05</step>
			<!-- Left rotation amount in radians -->
			<leftAngle>0.195</leftAngle>
			<!-- Right rotation amount in radians -->
			<rightAngle>-0.195</rightAngle>
			<!-- Type of learning -->
			<rlType>actorCritic</rlType>
			<!-- Minimum conjuntive layer cell radius -->
			<PCRadius>.12</PCRadius>
			<!-- Cells per side of the square -->
			<numPCCellsPerSide>16</numPCCellsPerSide>
			<!-- Type of conjunctive cell -->
			<placeCells>exponential</placeCells>
			<!-- Map dimensions for conjuntive cell placing -->
			<xmin>0</xmin>
			<ymin>0</ymin>
			<xmax>2</xmax>
			<ymax>2</ymax>
			
			<!-- Order in which feeders are visited -->
			<feederOrder>14,12,18,17,1</feederOrder>
		</params>
	</model>
	
	<group>
		<name>Control</name>
		<numMembers>1</numMembers>
		<params>
		</params>
		<tasks>
		</tasks>
	</group>
	
	<!-- Task to be performed before the eperiment -->
	<beforeExperimentTasks>
		<!-- Enable feeders all feeders -->
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>1</id>
				<x>0.528333333333333</x>
				<y>-0.41625</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>2</id>
				<x>0.095</x>
				<y>-0.662916666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>3</id>
				<x>-0.398333333333333</x>
				<y>-0.542916666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>4</id>
				<x>-0.671666666666667</x>
				<y>-0.0929166666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>5</id>
				<x>-0.538333333333333</x>
				<y>0.41375</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>6</id>
				<x>-0.0883333333333333</x>
				<y>0.67375</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>7</id>
				<x>0.415</x>
				<y>0.537083333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>8</id>
				<x>0.658333333333333</x>
				<y>0.0904166666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>9</id>
				<x>0.535</x>
				<y>-0.142916666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>10</id>
				<x>0.291666666666667</x>
				<y>-0.462916666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>11</id>
				<x>-0.118333333333333</x>
				<y>-0.522916666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>12</id>
				<x>-0.475</x>
				<y>-0.289583333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>13</id>
				<x>-0.548333333333333</x>
				<y>0.117083333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>14</id>
				<x>-0.275</x>
				<y>0.477083333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>15</id>
				<x>0.135</x>
				<y>0.537083333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>16</id>
				<x>0.495</x>
				<y>0.277083333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>17</id>
				<x>0.241666666666667</x>
				<y>-0.169583333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>18</id>
				<x>-0.175</x>
				<y>-0.229583333333333</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>19</id>
				<x>-0.251666666666667</x>
				<y>0.17375</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>20</id>
				<x>0.188333333333333</x>
				<y>0.250416666666667</y>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.AddFeederTask</name>
			<params>
				<id>21</id>
				<x>0.00833333333333333</x>
				<y>0.0104166666666667</y>
			</params>
		</task>
		
		<task>
			<name>edu.usf.experiment.task.EnableAllFeeders</name>
		</task>
	</beforeExperimentTasks>
	
	<!-- Loggers to be executed before the eperiment -->
	<beforeExperimentLoggers>
		<!-- Log walls -->
		<!--<logger> <name>edu.usf.experiment.log.WallLogger</name> <params> </params> </logger>-->
		<!-- Log conjunctive cells -->
		
	</beforeExperimentLoggers>
	<!-- Plots to perform before the experiment -->
	<beforeExperimentPlotters>
		<!-- Convert CSV files to rdata files -->
		<!-- <plotter> <name>edu.usf.experiment.plot.CSVConverter</name> </plotter> -->
		<!-- <plotter> <name>edu.usf.experiment.plot.PlotGatherer</name> </plotter> -->
		<!--<plotter> <name>edu.usf.ratsim.experiment.plot.PCPlotter</name> </plotter>-->
	</beforeExperimentPlotters>
	
	<!-- Training trial - Non-delayed cue phase -->
	<trial>
		<name>Travel</name>
		<!-- Groups to apply the trial -->
		<groups>
			<group>Control</group>
		</groups>
		<!-- Tasks to perform beforehand -->
		<beforeTrialTasks>
		</beforeTrialTasks>
		<!-- Episodes definition -->
		<episodes>
			<!-- Number of episodes -->
			<number>1</number>
			<!-- Sleep between cycles for visualization -->
			<sleep>100</sleep>
			<!-- Tasks to perform before each episode -->
			<beforeEpisodeTasks>
				<task>
					<name>edu.usf.experiment.task.ActivateAllEnabledFeeders</name>
				</task>
				<!-- Place the animat in a given place -->
				<task>
					<name>edu.usf.experiment.task.PlaceRobotInitally</name>
					<params>
						<point>
							<x>-0.2</x>
							<y>-0.4</y>
							<theta>1.57</theta>
						</point>
					</params>
				</task>
			</beforeEpisodeTasks>
			<!-- Tasks to performe before each cycle -->
			<beforeCycleTasks>
			</beforeCycleTasks>
			<!-- Tasks to performe after each cycle -->
			<afterCycleTasks>
				<task>
					<name>edu.usf.experiment.task.ReleaseFoodFromFeeders</name>
				</task>
			</afterCycleTasks>
			<!-- Loggers to execute after each cycle -->
			<afterCycleLoggers>
				<!-- Log the subject position -->
				<logger>
					<name>edu.usf.experiment.log.SubjectPositionLogger</name>
					<params>
					</params>
				</logger>
				<logger>
					<name>edu.usf.ratsim.experiment.log.PCActivityLogger</name>
				</logger>
			</afterCycleLoggers>
			<!-- Loggers to execute after each episode -->
			<afterEpisodeLoggers>
				<!-- Log each wall position -->
				<logger>
					<name>edu.usf.experiment.log.WallLogger</name>
					<params>
					</params>
				</logger>
				<logger>
					<name>edu.usf.experiment.log.FeederLogger</name>
				</logger>
				<logger>
					<name>edu.usf.ratsim.experiment.log.PCLogger</name>
				</logger>
			</afterEpisodeLoggers>
			<!-- Tasks to execute after each episode -->
			<afterEpisodeTasks>
			</afterEpisodeTasks>
			<!-- Conditions upon which the episode ends -->
			<stopConditions>
				<!-- Timeout cycles -->
				<condition>
					<name>edu.usf.experiment.condition.MaxCycles</name>
					<params>
						<max>100000</max>
					</params>
				</condition>
				<!-- Has eaten from 5 feeders -->
				<condition>
					<name>edu.usf.experiment.condition.FoundNFoodStopCond</name>
					<params>
						<n>5</n>
					</params>
				</condition>
			</stopConditions>
			<!-- Plotters to execute after each episode -->
			<afterEpisodePlotters>
				<!-- Copy the maze file to the episode folder -->
				<plotter>
					<name>edu.usf.experiment.plot.CopyMazeFile</name>
				</plotter>
				<!-- Convert csv to rdata -->
				<plotter>
					<name>edu.usf.experiment.plot.CSVConverter</name>
				</plotter>
				<!-- Get time info from position information -->
				<plotter>
					<name>edu.usf.experiment.plot.SummarizeRuntimes</name>
				</plotter>
				<!-- Plot path for each episode -->
				<plotter>
					<name>edu.usf.experiment.plot.PathPlotter</name>
				</plotter>
				<plotter>
					<name>edu.usf.ratsim.experiment.plot.PCPlotter</name>
				</plotter>
				
			</afterEpisodePlotters>
		</episodes>
		<!-- Tasks to perform after the trial has ended -->
		<afterTrialTasks>
		</afterTrialTasks>
		<!-- Loggers to execute after the trial has ended -->
		<afterTrialLoggers>
			
		</afterTrialLoggers>
		<!-- Plotters to execute after the trial has ended -->
		<afterTrialPlotters>

		</afterTrialPlotters>
	</trial>
	
	<!-- Tasks to perform after the experiment is over -->
	<afterExperimentTasks>
	</afterExperimentTasks>
	<!-- Loggers to execute after the experiment is over -->
	<afterExperimentLoggers>
	</afterExperimentLoggers>
	<!-- Plotters to execute after the experiment is over -->
	<afterExperimentPlotters>
		<plotter>
			<name>edu.usf.experiment.plot.RuntimePerTrialPlotter</name>
		</plotter>
		
	</afterExperimentPlotters>
</experiment>
